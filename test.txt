--// Variables
local Player = game.Players.LocalPlayer
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")

local Character = Player.Character or Player.CharacterAdded:Wait()
local Humanoid = Character:WaitForChild("Humanoid")

local WalkSpeedEnabled = false
local CustomWalkSpeed = 16
local FlyEnabled = false
local FlySpeed = 100

--// Functions
local function UpdateWalkSpeed()
	if WalkSpeedEnabled then
		Humanoid.WalkSpeed = CustomWalkSpeed
	else
		Humanoid.WalkSpeed = 16
	end
end

-- Fly system
local BodyGyro, BodyVelocity, FlyConn
local function ToggleFly(state)
	FlyEnabled = state
	if FlyEnabled then
		local HRP = Character:WaitForChild("HumanoidRootPart")
		Humanoid.PlatformStand = true

		BodyGyro = Instance.new("BodyGyro")
		BodyGyro.P = 9e4
		BodyGyro.MaxTorque = Vector3.new(9e9, 9e9, 9e9)
		BodyGyro.CFrame = HRP.CFrame
		BodyGyro.Parent = HRP

		BodyVelocity = Instance.new("BodyVelocity")
		BodyVelocity.Velocity = Vector3.zero
		BodyVelocity.MaxForce = Vector3.new(9e9, 9e9, 9e9)
		BodyVelocity.Parent = HRP

		FlyConn = RunService.RenderStepped:Connect(function()
			if FlyEnabled and HRP then
				local camCF = workspace.CurrentCamera.CFrame
				local moveDir = Vector3.zero

				if UserInputService:IsKeyDown(Enum.KeyCode.W) then
					moveDir += camCF.LookVector
				end
				if UserInputService:IsKeyDown(Enum.KeyCode.S) then
					moveDir -= camCF.LookVector
				end
				if UserInputService:IsKeyDown(Enum.KeyCode.A) then
					moveDir -= camCF.RightVector
				end
				if UserInputService:IsKeyDown(Enum.KeyCode.D) then
					moveDir += camCF.RightVector
				end
				if UserInputService:IsKeyDown(Enum.KeyCode.Space) then
					moveDir += Vector3.new(0,1,0)
				end
				if UserInputService:IsKeyDown(Enum.KeyCode.LeftControl) then
					moveDir -= Vector3.new(0,1,0)
				end

				if moveDir.Magnitude > 0 then
					BodyVelocity.Velocity = moveDir.Unit * FlySpeed
				else
					BodyVelocity.Velocity = Vector3.zero
				end

				BodyGyro.CFrame = camCF
			end
		end)
	else
		if FlyConn then FlyConn:Disconnect() FlyConn = nil end
		if BodyVelocity then BodyVelocity:Destroy() BodyVelocity = nil end
		if BodyGyro then BodyGyro:Destroy() BodyGyro = nil end
		Humanoid.PlatformStand = false
	end
end

--// UI
local ScreenGui = Instance.new("ScreenGui", game.CoreGui)
ScreenGui.Name = "MovementMenu"

local Frame = Instance.new("Frame", ScreenGui)
Frame.Size = UDim2.new(0, 300, 0, 200)
Frame.Position = UDim2.new(0.05, 0, 0.2, 0)
Frame.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
Frame.BorderSizePixel = 0

-- Title
local Title = Instance.new("TextLabel", Frame)
Title.Size = UDim2.new(1, 0, 0, 40)
Title.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Title.Text = "MENU PLAYER"
Title.TextScaled = true
Title.Font = Enum.Font.SourceSansBold
Title.TextColor3 = Color3.fromRGB(0, 0, 0)

-- WalkSpeed Toggle
local WalkToggle = Instance.new("TextButton", Frame)
WalkToggle.Position = UDim2.new(0, 10, 0, 50)
WalkToggle.Size = UDim2.new(0, 80, 0, 30)
WalkToggle.Text = "OFF"
WalkToggle.BackgroundColor3 = Color3.fromRGB(255, 0, 64)
WalkToggle.TextColor3 = Color3.fromRGB(255,255,255)

local WalkLabel = Instance.new("TextLabel", Frame)
WalkLabel.Position = UDim2.new(0, 100, 0, 50)
WalkLabel.Size = UDim2.new(0, 150, 0, 30)
WalkLabel.Text = "WalkSpeed"
WalkLabel.TextColor3 = Color3.fromRGB(255,255,255)
WalkLabel.BackgroundTransparency = 1
WalkLabel.Font = Enum.Font.SourceSansBold
WalkLabel.TextScaled = true

-- WalkSpeed Box
local WalkBox = Instance.new("TextBox", Frame)
WalkBox.Position = UDim2.new(0, 10, 0, 90)
WalkBox.Size = UDim2.new(0, 80, 0, 30)
WalkBox.Text = tostring(CustomWalkSpeed)
WalkBox.BackgroundColor3 = Color3.fromRGB(255,255,255)
WalkBox.TextColor3 = Color3.fromRGB(0,0,0)

-- Fly Toggle
local FlyToggle = Instance.new("TextButton", Frame)
FlyToggle.Position = UDim2.new(0, 10, 0, 130)
FlyToggle.Size = UDim2.new(0, 80, 0, 30)
FlyToggle.Text = "OFF"
FlyToggle.BackgroundColor3 = Color3.fromRGB(255, 0, 64)
FlyToggle.TextColor3 = Color3.fromRGB(255,255,255)

local FlyLabel = Instance.new("TextLabel", Frame)
FlyLabel.Position = UDim2.new(0, 100, 0, 130)
FlyLabel.Size = UDim2.new(0, 150, 0, 30)
FlyLabel.Text = "Fly Player"
FlyLabel.TextColor3 = Color3.fromRGB(255,255,255)
FlyLabel.BackgroundTransparency = 1
FlyLabel.Font = Enum.Font.SourceSansBold
FlyLabel.TextScaled = true

-- FlySpeed Box
local FlyBox = Instance.new("TextBox", Frame)
FlyBox.Position = UDim2.new(0, 10, 0, 170)
FlyBox.Size = UDim2.new(0, 80, 0, 30)
FlyBox.Text = tostring(FlySpeed)
FlyBox.BackgroundColor3 = Color3.fromRGB(255,255,255)
FlyBox.TextColor3 = Color3.fromRGB(0,0,0)

--// Button Functions
WalkToggle.MouseButton1Click:Connect(function()
	WalkSpeedEnabled = not WalkSpeedEnabled
	if WalkSpeedEnabled then
		WalkToggle.Text = "ON"
		WalkToggle.BackgroundColor3 = Color3.fromRGB(0, 200, 0)
	else
		WalkToggle.Text = "OFF"
		WalkToggle.BackgroundColor3 = Color3.fromRGB(255, 0, 64)
	end
	UpdateWalkSpeed()
end)

FlyToggle.MouseButton1Click:Connect(function()
	FlyEnabled = not FlyEnabled
	if FlyEnabled then
		FlyToggle.Text = "ON"
		FlyToggle.BackgroundColor3 = Color3.fromRGB(0, 200, 0)
	else
		FlyToggle.Text = "OFF"
		FlyToggle.BackgroundColor3 = Color3.fromRGB(255, 0, 64)
	end
	ToggleFly(FlyEnabled)
end)

WalkBox.FocusLost:Connect(function()
	local val = tonumber(WalkBox.Text)
	if val then
		CustomWalkSpeed = val
		UpdateWalkSpeed()
	end
end)

FlyBox.FocusLost:Connect(function()
	local val = tonumber(FlyBox.Text)
	if val then
		FlySpeed = val
	end
end)

-- Respawn fix
Player.CharacterAdded:Connect(function(char)
	Character = char
	Humanoid = char:WaitForChild("Humanoid")
	UpdateWalkSpeed()
end)
