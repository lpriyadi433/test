--[[
    Movement Menu dengan UI ala xsx Lib
    Dibuat ulang agar menyerupai UI framework xsx (tab system, watermark, style modern)
--]]

-- Services
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")

local Player = Players.LocalPlayer
local Character = Player.Character or Player.CharacterAdded:Wait()
local Humanoid = Character:WaitForChild("Humanoid")

-- Vars
local WalkSpeedEnabled = false
local CustomWalkSpeed = 16
local FlyEnabled = false
local FlySpeed = 100
local BodyGyro, BodyVelocity, FlyConn

-- Parent aman
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Name = "xsxMenu"
ScreenGui.ResetOnSpawn = false
if gethui then
    ScreenGui.Parent = gethui()
elseif syn and syn.protect_gui then
    syn.protect_gui(ScreenGui)
    ScreenGui.Parent = game.CoreGui
else
    ScreenGui.Parent = Player:WaitForChild("PlayerGui")
end

-- === WATERMARK ===
local Watermark = Instance.new("TextLabel", ScreenGui)
Watermark.Size = UDim2.new(0,300,0,25)
Watermark.Position = UDim2.new(0,15,0,15)
Watermark.BackgroundTransparency = 1
Watermark.Text = "xsx UI | FPS: 0 | Ping: 0ms"
Watermark.TextColor3 = Color3.fromRGB(200,200,200)
Watermark.Font = Enum.Font.GothamBold
Watermark.TextSize = 14
Watermark.TextXAlignment = Enum.TextXAlignment.Left

-- update watermark
task.spawn(function()
    while task.wait(1) do
        local fps = math.floor(1/RunService.RenderStepped:Wait())
        local ping = math.floor(Players.LocalPlayer:GetNetworkPing()*1000)
        Watermark.Text = string.format("xsx UI | FPS: %d | Ping: %dms", fps, ping)
    end
end)

-- === MAIN WINDOW ===
local Main = Instance.new("Frame", ScreenGui)
Main.Size = UDim2.new(0, 500, 0, 350)
Main.Position = UDim2.new(0.25,0,0.2,0)
Main.BackgroundColor3 = Color3.fromRGB(25,25,25)
Main.BorderSizePixel = 0
Main.ClipsDescendants = true

local UICorner = Instance.new("UICorner", Main)
UICorner.CornerRadius = UDim.new(0, 12)

local UIStroke = Instance.new("UIStroke", Main)
UIStroke.Color = Color3.fromRGB(60,60,60)
UIStroke.Thickness = 2

-- Title bar
local TitleBar = Instance.new("TextLabel", Main)
TitleBar.Size = UDim2.new(1, -60, 0, 40)
TitleBar.Position = UDim2.new(0,15,0,0)
TitleBar.BackgroundTransparency = 1
TitleBar.Text = "⚡ xsx Movement Menu"
TitleBar.TextColor3 = Color3.fromRGB(255,255,255)
TitleBar.Font = Enum.Font.GothamBold
TitleBar.TextSize = 18
TitleBar.TextXAlignment = Enum.TextXAlignment.Left

-- Close button
local CloseBtn = Instance.new("TextButton", Main)
CloseBtn.Size = UDim2.new(0,30,0,30)
CloseBtn.Position = UDim2.new(1,-40,0,5)
CloseBtn.BackgroundColor3 = Color3.fromRGB(220,60,60)
CloseBtn.Text = "✕"
CloseBtn.TextColor3 = Color3.fromRGB(255,255,255)
CloseBtn.Font = Enum.Font.GothamBold
CloseBtn.TextScaled = true
Instance.new("UICorner", CloseBtn).CornerRadius = UDim.new(0,6)

CloseBtn.MouseButton1Click:Connect(function()
    ScreenGui:Destroy()
end)

-- Tabs container
local TabBar = Instance.new("Frame", Main)
TabBar.Size = UDim2.new(0,120,1,-40)
TabBar.Position = UDim2.new(0,0,0,40)
TabBar.BackgroundColor3 = Color3.fromRGB(20,20,20)
Instance.new("UICorner", TabBar).CornerRadius = UDim.new(0,12)

local Pages = Instance.new("Frame", Main)
Pages.Size = UDim2.new(1,-130,1,-50)
Pages.Position = UDim2.new(0,130,0,45)
Pages.BackgroundTransparency = 1

-- function buat tab
local Tabs = {}
local function CreateTab(name)
    local Btn = Instance.new("TextButton", TabBar)
    Btn.Size = UDim2.new(1,0,0,40)
    Btn.BackgroundTransparency = 1
    Btn.Text = name
    Btn.Font = Enum.Font.GothamBold
    Btn.TextColor3 = Color3.fromRGB(200,200,200)
    Btn.TextSize = 14

    local Page = Instance.new("ScrollingFrame", Pages)
    Page.Size = UDim2.new(1,0,1,0)
    Page.BackgroundTransparency = 1
    Page.Visible = false
    Page.CanvasSize = UDim2.new(0,0,0,400)

    local UIList = Instance.new("UIListLayout", Page)
    UIList.Padding = UDim.new(0,8)
    UIList.SortOrder = Enum.SortOrder.LayoutOrder

    Tabs[name] = {Button=Btn, Page=Page}

    Btn.MouseButton1Click:Connect(function()
        for _,t in pairs(Tabs) do
            t.Page.Visible = false
            t.Button.TextColor3 = Color3.fromRGB(200,200,200)
        end
        Page.Visible = true
        Btn.TextColor3 = Color3.fromRGB(255,255,255)
    end)

    return Page
end

-- Buat tab
local MovementTab = CreateTab("Movement")
local VisualTab = CreateTab("Visual")
local MiscTab = CreateTab("Misc")

-- default tab
Tabs["Movement"].Button.TextColor3 = Color3.fromRGB(255,255,255)
Tabs["Movement"].Page.Visible = true

-- function buat button styled
local function CreateButton(text, parent, callback)
    local Btn = Instance.new("TextButton", parent)
    Btn.Size = UDim2.new(0.5,-10,0,35)
    Btn.BackgroundColor3 = Color3.fromRGB(50,50,50)
    Btn.Text = text
    Btn.Font = Enum.Font.GothamBold
    Btn.TextSize = 14
    Btn.TextColor3 = Color3.fromRGB(255,255,255)
    Btn.AutoButtonColor = true
    Instance.new("UICorner", Btn).CornerRadius = UDim.new(0,6)

    Btn.MouseButton1Click:Connect(callback)
    return Btn
end

-- function buat slider styled
local function CreateSlider(label, min, max, default, parent, callback)
    local Frame = Instance.new("Frame", parent)
    Frame.Size = UDim2.new(0.9,0,0,40)
    Frame.BackgroundColor3 = Color3.fromRGB(40,40,40)
    Instance.new("UICorner", Frame).CornerRadius = UDim.new(0,6)

    local Title = Instance.new("TextLabel", Frame)
    Title.Size = UDim2.new(0.5,0,1,0)
    Title.BackgroundTransparency = 1
    Title.Text = label
    Title.TextColor3 = Color3.fromRGB(255,255,255)
    Title.Font = Enum.Font.GothamBold
    Title.TextSize = 14
    Title.TextXAlignment = Enum.TextXAlignment.Left

    local ValueLabel = Instance.new("TextLabel", Frame)
    ValueLabel.Size = UDim2.new(0.2,0,1,0)
    ValueLabel.Position = UDim2.new(0.8,0,0,0)
    ValueLabel.BackgroundTransparency = 1
    ValueLabel.Text = tostring(default)
    ValueLabel.TextColor3 = Color3.fromRGB(200,200,200)
    ValueLabel.Font = Enum.Font.Gotham
    ValueLabel.TextSize = 14
    ValueLabel.TextXAlignment = Enum.TextXAlignment.Right

    local Bar = Instance.new("Frame", Frame)
    Bar.Size = UDim2.new(0.9,0,0,6)
    Bar.Position = UDim2.new(0.05,0,1,-10)
    Bar.BackgroundColor3 = Color3.fromRGB(60,60,60)
    Instance.new("UICorner", Bar).CornerRadius = UDim.new(0,3)

    local Fill = Instance.new("Frame", Bar)
    Fill.Size = UDim2.new((default-min)/(max-min),0,1,0)
    Fill.BackgroundColor3 = Color3.fromRGB(0,180,255)
    Instance.new("UICorner", Fill).CornerRadius = UDim.new(0,3)

    local dragging = false
    Bar.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = true
        end
    end)
    UserInputService.InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = false
        end
    end)
    UserInputService.InputChanged:Connect(function(input)
        if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
            local relX = math.clamp((input.Position.X - Bar.AbsolutePosition.X) / Bar.AbsoluteSize.X, 0, 1)
            local value = math.floor(min + (max-min) * relX)
            Fill.Size = UDim2.new(relX,0,1,0)
            ValueLabel.Text = tostring(value)
            callback(value)
        end
    end)
end

-- === TAB MOVEMENT CONTENT ===
local WalkBtn = CreateButton("Toggle WalkSpeed", MovementTab, function()
    WalkSpeedEnabled = not WalkSpeedEnabled
    if WalkSpeedEnabled then
        Humanoid.WalkSpeed = CustomWalkSpeed
    else
        Humanoid.WalkSpeed = 16
    end
end)

CreateSlider("WalkSpeed", 16, 200, 16, MovementTab, function(val)
    CustomWalkSpeed = val
    if WalkSpeedEnabled then
        Humanoid.WalkSpeed = CustomWalkSpeed
    end
end)

local FlyBtn = CreateButton("Toggle Fly", MovementTab, function()
    FlyEnabled = not FlyEnabled
    if FlyEnabled then
        local HRP = Character:WaitForChild("HumanoidRootPart")
        Humanoid.PlatformStand = true
        BodyGyro = Instance.new("BodyGyro", HRP)
        BodyGyro.MaxTorque = Vector3.new(9e9,9e9,9e9)
        BodyVelocity = Instance.new("BodyVelocity", HRP)
        BodyVelocity.MaxForce = Vector3.new(9e9,9e9,9e9)
        FlyConn = RunService.RenderStepped:Connect(function()
            local camCF = workspace.CurrentCamera.CFrame
            local move = Vector3.new()
            if UserInputService:IsKeyDown(Enum.KeyCode.W) then move += camCF.LookVector end
            if UserInputService:IsKeyDown(Enum.KeyCode.S) then move -= camCF.LookVector end
            if UserInputService:IsKeyDown(Enum.KeyCode.A) then move -= camCF.RightVector end
            if UserInputService:IsKeyDown(Enum.KeyCode.D) then move += camCF.RightVector end
            if UserInputService:IsKeyDown(Enum.KeyCode.Space) then move += Vector3.new(0,1,0) end
            if UserInputService:IsKeyDown(Enum.KeyCode.LeftControl) then move -= Vector3.new(0,1,0) end
            BodyVelocity.Velocity = move.Magnitude > 0 and move.Unit * FlySpeed or Vector3.new()
            BodyGyro.CFrame = camCF
        end)
    else
        if FlyConn then FlyConn:Disconnect() end
        if BodyVelocity then BodyVelocity:Destroy() end
        if BodyGyro then BodyGyro:Destroy() end
        Humanoid.PlatformStand = false
    end
end)

CreateSlider("FlySpeed", 50, 300, 100, MovementTab, function(val)
    FlySpeed = val
end)

-- Respawn fix
Player.CharacterAdded:Connect(function(c)
    Character = c
    Humanoid = c:WaitForChild("Humanoid")
    if WalkSpeedEnabled then Humanoid.WalkSpeed = CustomWalkSpeed end
    if FlyEnabled then
        FlyBtn:Activate()
    end
end)
